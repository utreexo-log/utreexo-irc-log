[04:08:03] *** Quits: ja (janus@anubis.0x90.dk) (*.net *.split)
[04:08:03] *** Quits: digi_james (sid281632@gateway/web/irccloud.com/x-acapbubtjyrfcjrf) (*.net *.split)
[04:08:03] *** Quits: RubenSomsen (sid301948@gateway/web/irccloud.com/x-siipwwkhxjcfolyk) (*.net *.split)
[04:08:04] *** Quits: instagibbs (~instagibb@pool-71-178-191-230.washdc.fios.verizon.net) (*.net *.split)
[04:08:05] *** Quits: gnusha (~gnusha@unaffiliated/kanzure/bot/gnusha) (*.net *.split)
[04:08:05] *** Quits: pigeons (~pigeons@androzani.sysevolve.com) (*.net *.split)
[04:08:05] *** Quits: kanzure (~kanzure@unaffiliated/kanzure) (*.net *.split)
[04:08:06] *** Quits: fjahr (sid374480@gateway/web/irccloud.com/x-uivuzkqvxqkxtfmn) (*.net *.split)
[04:08:06] *** Quits: jamesob (sid180710@gateway/web/irccloud.com/x-msxrcsfqcftqvufi) (*.net *.split)
[04:08:06] *** Quits: stevenroose (~steven@irc.roose.io) (*.net *.split)
[04:08:06] *** Quits: kallewoof (~quassel@240d:1a:759:6000:a7b1:451a:8874:e1ac) (*.net *.split)
[04:08:07] *** Quits: cfields (~cfields@unaffiliated/cfields) (*.net *.split)
[04:08:07] *** Quits: rjected (~dan@pool-71-184-77-198.bstnma.fios.verizon.net) (*.net *.split)
[04:08:07] *** Quits: achow101 (~achow101@unaffiliated/achow101) (*.net *.split)
[04:08:07] *** Quits: valwal_ (sid334773@gateway/web/irccloud.com/x-luuxrqxzkssfsrcv) (*.net *.split)
[04:08:08] *** Quits: fanquake (sid369002@gateway/web/irccloud.com/x-olctokxewerkqszl) (*.net *.split)
[04:08:08] *** Quits: ghost43 (~daer@gateway/tor-sasl/daer) (*.net *.split)
[04:08:08] *** Quits: jb55 (~jb55@gateway/tor-sasl/jb55) (*.net *.split)
[04:08:08] *** Quits: dergoegge (uid453889@gateway/web/irccloud.com/x-uodyyuylruvokghe) (*.net *.split)
[04:14:48] *** Joins: instagibbs (~instagibb@pool-71-178-191-230.washdc.fios.verizon.net)
[04:14:48] *** Joins: RubenSomsen (sid301948@gateway/web/irccloud.com/x-siipwwkhxjcfolyk)
[04:14:48] *** Joins: digi_james (sid281632@gateway/web/irccloud.com/x-acapbubtjyrfcjrf)
[04:14:48] *** Joins: ja (janus@anubis.0x90.dk)
[04:14:48] *** Joins: kanzure (~kanzure@unaffiliated/kanzure)
[04:14:48] *** Joins: pigeons (~pigeons@androzani.sysevolve.com)
[04:14:48] *** Joins: kallewoof (~quassel@240d:1a:759:6000:a7b1:451a:8874:e1ac)
[04:14:48] *** Joins: stevenroose (~steven@irc.roose.io)
[04:14:48] *** Joins: jamesob (sid180710@gateway/web/irccloud.com/x-msxrcsfqcftqvufi)
[04:14:48] *** Joins: fjahr (sid374480@gateway/web/irccloud.com/x-uivuzkqvxqkxtfmn)
[04:14:48] *** Joins: rjected (~dan@pool-71-184-77-198.bstnma.fios.verizon.net)
[04:14:48] *** Joins: cfields (~cfields@unaffiliated/cfields)
[04:14:48] *** Joins: achow101 (~achow101@unaffiliated/achow101)
[04:14:48] *** Joins: ghost43 (~daer@gateway/tor-sasl/daer)
[04:14:48] *** Joins: jb55 (~jb55@gateway/tor-sasl/jb55)
[04:14:48] *** Joins: valwal_ (sid334773@gateway/web/irccloud.com/x-luuxrqxzkssfsrcv)
[04:14:48] *** Joins: dergoegge (uid453889@gateway/web/irccloud.com/x-uodyyuylruvokghe)
[04:14:48] *** Joins: fanquake (sid369002@gateway/web/irccloud.com/x-olctokxewerkqszl)
[04:14:59] *** Joins: gnusha (~gnusha@unaffiliated/kanzure/bot/gnusha)
[04:16:37] *** Quits: digi_james (sid281632@gateway/web/irccloud.com/x-acapbubtjyrfcjrf) (Ping timeout: 245 seconds)
[04:17:48] *** Joins: digi_james (sid281632@gateway/web/irccloud.com/x-qxgppfsjpuhvoxcs)
[08:58:44] *** Joins: rafalcpp (~racalcppp@ip-178-214.ists.pl)
[11:25:25] <kcalvinalvin> hmmm I think I may know why btcd is taking forever with scriptval... With a dual core cpu that supports 2 threads per cpu, it's creating 12 goroutines *per tx*. I haven't looked at actual btcd code yet but the way csn calls scriptValidate now, each script is taking 60% of the time waiting for the scheduler
[11:25:38] <kcalvinalvin> I suspect it'll be similar for actual btcd code
[11:39:19] <kcalvinalvin> I guess this sorta explains the gc situation as well. Go allocates new stacks on the heap so a block has 1000~2000 txs so that must be one of the reasons why gc takes so long
[11:39:52] <kcalvinalvin> *new stacks for each goroutine when it needs more than the default of 4096 bytes
[14:13:14] *** Quits: rafalcpp (~racalcppp@ip-178-214.ists.pl) (Ping timeout: 240 seconds)
[14:17:04] *** Joins: rafalcpp (~racalcppp@185.3.112.131)
[14:25:40] *** Quits: rafalcpp (~racalcppp@185.3.112.131) (Ping timeout: 256 seconds)
[14:25:48] *** Joins: rafalcpp_ (~racalcppp@ip-178-214.ists.pl)
[16:45:02] <kcalvinalvin> hmmm odd looks like decred has the same problem
[16:46:53] <kcalvinalvin> ah decred has like 10 txs per block so this shouldn't be a problem for them
[17:34:33] <rjected> kcalvinalvin: in my profiling I've seen a massive amount of basically useless allocs in treap, which I think probably contributes more to the GC pressure that bogs down sync. Do you see the same thing?
[17:35:45] <rjected> I have a theory that the database package is the problem, which would mean that utreexo might help a lot
[21:03:47] *** Joins: ThomasV (~thomasv@unaffiliated/thomasv)
[21:26:37] *** Quits: rafalcpp_ (~racalcppp@ip-178-214.ists.pl) (Ping timeout: 264 seconds)
[22:26:49] *** Quits: ThomasV (~thomasv@unaffiliated/thomasv) (Ping timeout: 265 seconds)
